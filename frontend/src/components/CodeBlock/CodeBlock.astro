---
import { translation } from "@i18n/_CodeBlock";
import type { Langs } from "@i18n/_langs";
import { importQuestion } from "src/content/questions/CodeQuestion";
import RunButton from "./RunButton.astro";
import ResetButton from "./ResetButton.astro";

/** CodeBlock */
export type Props = {
  /** Checkpoint that will be activated when "SUCCESS" is returned. */
  id?: string;
  code?: string;
  placeholder?: string;
  errorMsg?: string;
  showLineNumbers?: boolean;
  editable?: boolean;
  showOutput?: boolean;
};

const l = translation(Astro.url.pathname.split("/")[1] as Langs);

const {
  id = "",
  placeholder = l.placeholder,
  errorMsg = l.error,
  showLineNumbers = true,
  editable = true,
  showOutput,
} = Astro.props;

const code = (Astro.props.code !== undefined ? Astro.props.code : (await importQuestion(id)).code)
  .trim()
  .replaceAll("$\\n", "");

const props = {
  id,
  placeholder,
  code,
  errorMsg,
  showLineNumbers: showLineNumbers.toString(),
  editable: editable.toString(),
  showOutput,
};
---

<x-code-block class="not-content" {...props}>
  <pre>{code || placeholder}</pre>
  <div id="buttons">
    <button id="run" title="Run (Ctrl+Enter)">
      <RunButton />
    </button>
    
    <button id="reset" title="Reset code">
      <ResetButton />
    </button>
  </div>
  <output />
  {
    import.meta.env.DEV && (
      <button id="DEV-RESET">
        <b>RESET</b>
      </button>
    )
  }
</x-code-block>

{
  import.meta.env.DEV && (
  <style>
      @media only screen and (min-width: 72rem) {
      #DEV-RESET {
        position: absolute;
        right: -4rem;
      }
    }
  </style>
  )
}

<style>
  x-code-block {
    display: grid;
    margin: 0;
    font-size: 1rem;
    grid-template-columns: minmax(0px, 1fr) 60px;
  }

  @media only screen and (min-width: 72rem) {
    x-code-block {
      font-size: 1rem;
      grid-template-columns: 90% auto;
    }
  }
  x-code-block[showlinenumbers="true"] pre {
    padding-left: 26px;
  }
  pre {
    color: gray;
    line-height: 1.4;
    padding: 4px;
    padding-left: 6px;
  }
  #buttons {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-left: var(--card-padding);
  }
  button {
    background-color: rgba(0, 0, 0, 0);
    color: var(--sl-color-white);
    cursor: pointer;
    border: 0;
    margin: 0;
    padding: 0;
    height: fit-content;
    transition: opacity 0.25s ease;
  }
  button:disabled {
    opacity: 0.2;
  }
  output {
    font-size: 1rem;
    font-family: monospace;
    border-width: 1px;
    border-style: solid;
    border-color: color-mix(in srgb, var(--sl-color-white), transparent 90%);
    border-radius: 6px;
    padding: 1rem;
    grid-column: span 3;
    margin-top: 1rem;
    white-space: pre-line;

    display: none;
  }
</style>

<script>
  import { CodeBlock } from "./CodeBlock";
  customElements.define("x-code-block", CodeBlock);
</script>
