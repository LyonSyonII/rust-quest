---
interface Props {
  id: string;
}
const { id } = Astro.props;
---

<x-checkpoint id={id} aria-disabled>
    <slot />
</x-checkpoint>

<style>
  x-checkpoint {
    display: block;
  }
  x-checkpoint[aria-disabled] {
    filter: blur(5px);
    pointer-events: none;
    user-select: none;
  }
  x-checkpoint[aria-disabled] > :global(img) {
    filter: blur(5px) opacity(10%);
  }
  x-checkpoint {
    transition: filter 0.25s ease-out;
  }
  img {
    transition: filter 0.25s ease-out;
  }
</style>

<script>
  import { subscribe } from "src/persistence/checkpoint";

  class Checkpoint extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const id = this.getAttribute("id") as string;

      subscribe(id, async (updated) => {
        if (!updated.has(id)) {
          return;
        }
        this.ariaDisabled = null;
      }, true);
    }
  }
  customElements.define("x-checkpoint", Checkpoint);
</script>
